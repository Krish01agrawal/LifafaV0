# ============================================================================
# Gmail Intelligence Platform - Docker Compose
# ============================================================================
# Complete development and production setup with all required services

version: '3.8'

services:
  # ============================================================================
  # Gmail Intelligence Backend
  # ============================================================================
  gmail-intelligence:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gmail-intelligence-backend
    ports:
      - "${PORT:-8000}:8000"
    environment:
      # Core settings
      - PORT=8000
      - WORKERS=${WORKERS:-4}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Database
      - MONGODB_URL=mongodb://mongodb:27017/gmail_intelligence
      
      # API Keys (from .env file)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MEM0_API_KEY=${MEM0_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      
      # Google OAuth
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - REDIRECT_URI=${REDIRECT_URI:-http://localhost:8000/auth/callback}
      
      # Credit Bureau APIs (optional)
      - CIBIL_API_KEY=${CIBIL_API_KEY:-}
      - EXPERIAN_API_KEY=${EXPERIAN_API_KEY:-}
      - CRIF_API_KEY=${CRIF_API_KEY:-}
      - EQUIFAX_API_KEY=${EQUIFAX_API_KEY:-}
      
      # Performance settings
      - ENABLE_SMART_CACHING=${ENABLE_SMART_CACHING:-true}
      - ENABLE_BATCH_PROCESSING=${ENABLE_BATCH_PROCESSING:-true}
      - MAX_CONCURRENT_EMAIL_PROCESSING=${MAX_CONCURRENT_EMAIL_PROCESSING:-10}
      - EMAIL_PROCESSING_TIMEOUT=${EMAIL_PROCESSING_TIMEOUT:-600}
      - RATE_LIMIT_REQUESTS_PER_MINUTE=${RATE_LIMIT_REQUESTS_PER_MINUTE:-100}
      
    volumes:
      # Persistent data
      - gmail_data:/app/data
      - gmail_logs:/app/logs
      # Development: mount code for live reload (uncomment for dev)
      # - ./backend:/app/backend
      
    depends_on:
      - mongodb
      - redis
      
    networks:
      - gmail-intelligence-network
      
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ============================================================================
  # MongoDB Database
  # ============================================================================
  mongodb:
    image: mongo:7.0
    container_name: gmail-intelligence-mongodb
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=gmail_intelligence
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      # Initialize database with indexes
      - ./scripts/init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js:ro
    networks:
      - gmail-intelligence-network
    restart: unless-stopped
    command: mongod --auth

  # ============================================================================
  # Redis Cache (for performance optimization)
  # ============================================================================
  redis:
    image: redis:7.2-alpine
    container_name: gmail-intelligence-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - gmail-intelligence-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # Nginx Load Balancer (for production)
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: gmail-intelligence-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./production_nginx.conf:/etc/nginx/nginx.conf:ro
      # SSL certificates (add your own)
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - gmail-intelligence
    networks:
      - gmail-intelligence-network
    restart: unless-stopped
    profiles:
      - production

  # ============================================================================
  # MongoDB Admin Interface (optional, for development)
  # ============================================================================
  mongo-express:
    image: mongo-express:latest
    container_name: gmail-intelligence-mongo-express
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD:-password}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-password}
    depends_on:
      - mongodb
    networks:
      - gmail-intelligence-network
    restart: unless-stopped
    profiles:
      - development

# ============================================================================
# VOLUMES
# ============================================================================
volumes:
  gmail_data:
    driver: local
  gmail_logs:
    driver: local
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local

# ============================================================================
# NETWORKS
# ============================================================================
networks:
  gmail-intelligence-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 